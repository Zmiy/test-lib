{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/services/auth.service.ts","./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/dashboard/dashboard.component.ts","./src/app/modules/auth/dashboard/dashboard.component.html","./src/app/modules/auth/forgot-password/forgot-password.component.ts","./src/app/modules/auth/forgot-password/forgot-password.component.html","./src/app/modules/auth/sign-in/sign-in.component.ts","./src/app/modules/auth/sign-in/sign-in.component.html","./src/app/modules/auth/sign-up/sign-up.component.ts","./src/app/modules/auth/sign-up/sign-up.component.html","./src/app/modules/auth/verify-email/verify-email.component.ts","./src/app/modules/auth/verify-email/verify-email.component.html","./src/app/routing/app-routing.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'test-lib';\n}\n","\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './routing/app-routing.module';\nimport { AppComponent } from './app.component';\n\n// Firebase services + enviorment module\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { environment } from '../environments/environment';\n\nimport { AuthModule } from './modules/auth/auth.module';\nimport { AuthService } from './core/services/auth.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AuthModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n  ],\n  providers: [AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable, NgZone } from '@angular/core';\nimport { User } from '../../models/user';\nimport { auth } from 'firebase/app';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  userData: any; // Save logged in user data\n\n  constructor(\n    public afs: AngularFirestore,   // Inject Firestore service\n    public afAuth: AngularFireAuth, // Inject Firebase auth service\n    public router: Router,\n    public ngZone: NgZone // NgZone service to remove outside scope warning\n  ) {\n    /* Saving user data in localstorage when\n    logged in and setting up null when logged out */\n    this.afAuth.authState.subscribe(user => {\n      if (user) {\n        this.userData = user;\n        localStorage.setItem('user', JSON.stringify(this.userData));\n        JSON.parse(localStorage.getItem('user'));\n      } else {\n        localStorage.setItem('user', null);\n        JSON.parse(localStorage.getItem('user'));\n      }\n    });\n  }\n\n  // Sign in with email/password\n  SignIn(email, password) {\n    return this.afAuth.signInWithEmailAndPassword(email, password)\n      .then((result) => {\n        this.ngZone.run(() => {\n          this.router.navigate(['/', 'dashboard']).then(nav => {\n            console.log(nav);\n          });\n        });\n        this.SetUserData(result.user);\n      }).catch((error) => {\n        window.alert(error.message);\n      });\n  }\n\n  // Sign up with email/password\n  SignUp(email, password) {\n    return this.afAuth.createUserWithEmailAndPassword(email, password)\n      .then((result) => {\n        /* Call the SendVerificaitonMail() function when new user sign\n        up and returns promise */\n        this.SendVerificationMail();\n        this.SetUserData(result.user);\n      }).catch((error) => {\n        window.alert(error.message);\n      });\n  }\n\n\n  // Send email verfificaiton when new user sign up\n  SendVerificationMail() {\n    return this.afAuth.currentUser.then((user) => {\n      return user.sendEmailVerification();\n    })\n    .then(() => {\n      this.router.navigate(['verify-email-address']);\n    });\n  }\n\n  // Reset Forggot password\n  ForgotPassword(passwordResetEmail) {\n    return this.afAuth.sendPasswordResetEmail(passwordResetEmail)\n    .then(() => {\n      window.alert('Password reset email sent, check your inbox.');\n    }).catch((error) => {\n      window.alert(error);\n    });\n  }\n\n  // Returns true when user is looged in and email is verified\n  get isLoggedIn(): boolean {\n    const user = JSON.parse(localStorage.getItem('user'));\n    return (user !== null && user.emailVerified !== false) ? true : false;\n  }\n\n  // Sign in with Google\n  GoogleAuth() {\n    return this.AuthLogin(new auth.GoogleAuthProvider());\n  }\n\n  // Sign in with Facebook\n  FacebookAuth() {\n    return this.AuthLogin(new auth.FacebookAuthProvider());\n  }\n  // Sign in with Facebook\n  GitHubAuth() {\n    return this.AuthLogin(new auth.GithubAuthProvider());\n  }\n  // Auth logic to run auth providers\n  AuthLogin(provider) {\n    return this.afAuth.signInWithPopup(provider)\n    .then((result) => {\n       // this.ngZone.run(() => {\n          this.router.navigate(['dashboard']);\n        // });\n          this.SetUserData(result.user);\n    }).catch((error) => {\n      window.alert(error);\n    });\n  }\n\n  /* Setting up user data when sign in with username/password,\n  sign up with username/password and sign in with social auth\n  provider in Firestore database using AngularFirestore + AngularFirestoreDocument service */\n  SetUserData(user) {\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(`users/${user.uid}`);\n    const userData: User = {\n      uid: user.uid,\n      email: user.email,\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      emailVerified: user.emailVerified\n    };\n    return userRef.set(userData, {\n      merge: true\n    });\n  }\n\n  // Sign out\n  SignOut() {\n    return this.afAuth.signOut().then(() => {\n      localStorage.removeItem('user');\n      this.router.navigate(['sign-in']);\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { SignInComponent } from './sign-in/sign-in.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { VerifyEmailComponent } from './verify-email/verify-email.component';\nimport { RouterModule } from '@angular/router';\n\n\n@NgModule({\n  declarations: [DashboardComponent, SignInComponent, SignUpComponent, ForgotPasswordComponent, VerifyEmailComponent],\n  imports: [\n    CommonModule, RouterModule\n  ],\n  exports: [RouterModule]\n})\nexport class AuthModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../core/services/auth.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Top navigation -->\n<nav class=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n    <a class=\"navbar-brand col-sm-3 col-md-2 mr-0\">\n      <img class=\"brand-logo\" src=\"assets/logo-positronx-white.svg\" alt=\"positronX.io Logo\">\n    </a>\n  </nav>\n  \n  <!-- Sidebar navigation -->\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n  \n      <nav class=\"col-md-2 d-md-block bg-light sidebar\">\n        <div class=\"sidebar-sticky\">\n          <ul class=\"nav flex-column\">\n            <li class=\"nav-item\">\n              <a class=\"nav-link active\">\n                <i class=\"fas fa-user\"></i>User Profile\n              </a>\n            </li>\n            <!-- Calling SignOut() Api from AuthService -->\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" (click)=\"authService.SignOut()\">\n                <i class=\"fas fa-sign-out-alt\"></i>Log out\n              </a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n  \n      <!-- Main content -->\n      <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\n        <div class=\"inner-adjust\">\n  \n          <div class=\"pt-3 pb-2 mb-3 border-bottom\">\n            <h1 class=\"h2\">User Profile</h1>\n          </div>\n          <!-- Show user data when logged in -->\n          <div class=\"row\" *ngIf=\"authService.userData as user\">\n            <div class=\"col-md-12\">\n              <div class=\"media\">\n                <img class=\"align-self-start mr-5 img-thumbnail rounded-circle\" src=\"{{(user.photoURL) ? user.photoURL : '/assets/dummy-user.png'}}\"\n                  alt=\"{{user.displayName}}\">\n                <div class=\"media-body\">\n                  <h1>Hello: <strong>{{(user.displayName) ? user.displayName : 'User'}}</strong></h1>\n                  <p>User ID: <strong>{{user.uid}}</strong></p>\n                  <p>Email: <strong>{{user.email}}</strong></p>\n                  <p>Email Verified: <strong>{{user.emailVerified}}</strong></p>\n                </div>\n              </div>\n            </div>\n          </div>\n  \n        </div>\n      </main>\n  \n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../core/services/auth.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"displayTable\">\n    <div class=\"displayTableCell\">\n      <div class=\"authBlock\">\n        <h3>Reset Password</h3>\n  \n        <p class=\"text-center\">Please enter your email address to request a password reset.</p>\n  \n        <div class=\"formGroup\">\n          <input type=\"email\" class=\"formControl\" placeholder=\"Email Address\" #passwordResetEmail required>\n        </div>\n  \n        <!-- Calling ForgotPassword from AuthService Api -->\n        <div class=\"formGroup\">\n          <input type=\"submit\" class=\"btn btnPrimary\" value=\"Reset Password\" (click)=\"authService.ForgotPassword(passwordResetEmail.value)\">\n        </div>\n      </div>\n  \n      <div class=\"redirectToLogin\">\n        <span>Go back to ? <span class=\"redirect\" routerLink=\"/sign-in\">Log In</span></span>\n      </div>\n  \n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../core/services/auth.service';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.scss']\n})\nexport class SignInComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"displayTable\">\n    <div class=\"displayTableCell\">\n  \n      <div class=\"authBlock\">\n        <h3>Sign In</h3>\n        <div class=\"formGroup\">\n          <input type=\"text\" class=\"formControl\" placeholder=\"Username\" #userName required>\n        </div>\n  \n        <div class=\"formGroup\">\n          <input type=\"password\" class=\"formControl\" placeholder=\"Password\" #userPassword required>\n        </div>\n  \n        <!-- Calling SignIn Api from AuthService -->\n        <div class=\"formGroup\">\n          <input type=\"button\" class=\"btn btnPrimary\" value=\"Log in\" (click)=\"authService.SignIn(userName.value, userPassword.value)\">\n        </div>\n  \n        <div class=\"formGroup\">\n          <span class=\"or\"><span class=\"orInner\">Or</span></span>\n        </div>\n  \n        <!-- Calling GoogleAuth Api from AuthService -->\n        <div class=\"formGroup\">\n          <button type=\"button\" class=\"btn googleBtn\" (click)=\"authService.GoogleAuth()\">\n            <i class=\"fab fa-google-plus-g\"></i>\n            Log in with Google\n          </button>\n        </div>\n      \n        <!-- Continue with Facebook -->\n        <div class=\"formGroup\">\n          <button type=\"button\" class=\"btn facebookBtn\" (click)=\"authService.FacebookAuth()\">\n            <i class=\"fab fa-facebook\"></i>\n            Log in with Facebook\n          </button>\n        </div>\n\n        <div class=\"forgotPassword\">\n          <span routerLink=\"/forgot-password\">Forgot Password?</span>\n        </div>\n      </div>\n  \n      <div class=\"redirectToLogin\">\n        <span>Don't have an account?<span class=\"redirect\" routerLink=\"/register-user\">Sign Up</span></span>\n      </div>\n  \n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../core/services/auth.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"displayTable\">\n    <div class=\"displayTableCell\">\n  \n      <div class=\"authBlock\">\n        <h3>Sign Up</h3>\n  \n        <div class=\"formGroup\">\n          <input type=\"email\" class=\"formControl\" placeholder=\"Email Address\" #userEmail required>\n        </div>\n  \n        <div class=\"formGroup\">\n          <input type=\"password\" class=\"formControl\" placeholder=\"Password\" #userPwd required>\n        </div>\n  \n        <div class=\"formGroup\">\n          <input type=\"button\" class=\"btn btnPrimary\" value=\"Sign Up\" (click)=\"authService.SignUp(userEmail.value, userPwd.value)\">\n        </div>\n  \n        <div class=\"formGroup\">\n          <span class=\"or\"><span class=\"orInner\">Or</span></span>\n        </div>\n  \n        <!-- Continue with Google -->\n        <div class=\"formGroup\">\n          <button type=\"button\" class=\"btn googleBtn\" (click)=\"authService.GoogleAuth()\">\n            <i class=\"fab fa-google-plus-g\"></i>\n            Continue with Google\n          </button>\n        </div>\n  \n        <!-- Continue with Facebook -->\n        <div class=\"formGroup\">\n          <button type=\"button\" class=\"btn facebookBtn\" (click)=\"authService.FacebookAuth()\">\n            <i class=\"fab fa-facebook\"></i>\n            Continue with Facebook\n          </button>\n        </div>\n         <!-- Continue with GitHub -->\n         <div class=\"formGroup\">\n          <button type=\"button\" class=\"btn githubBth\" (click)=\"authService.GitHubAuth()\">\n            <i class=\"fab fa-github\"></i>\n            Continue with GitHub\n          </button>\n        </div>\n      </div>\n  \n      <div class=\"redirectToLogin\">\n        <span>Already have an account? <span class=\"redirect\" routerLink=\"/sign-in\">Log In</span></span>\n      </div>\n    </div>\n  \n  </div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../core/services/auth.service';\n\n@Component({\n  selector: 'app-verify-email',\n  templateUrl: './verify-email.component.html',\n  styleUrls: ['./verify-email.component.scss']\n})\nexport class VerifyEmailComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"displayTable\">\n    <div class=\"displayTableCell\">\n  \n      <div class=\"authBlock\">\n        <h3>Thank You for Registering</h3>\n  \n        <div class=\"formGroup\" *ngIf=\"authService.userData as user\">\n          <p class=\"text-center\">We have sent a confirmation email to <strong>{{user.email}}</strong>.</p>\n          <p class=\"text-center\">Please check your email and click on the link to verfiy your email address.</p>\n        </div>\n        \n        <!-- Calling SendVerificationMail() method using authService Api -->\n        <div class=\"formGroup\">\n          <button type=\"button\" class=\"btn btnPrimary\" (click)=\"authService.SendVerificationMail()\">\n            <i class=\"fas fa-redo-alt\"></i>\n            Resend Verification Email\n          </button>\n        </div>\n  \n      </div>\n  \n      <div class=\"redirectToLogin\">\n        <span>Go back to?<span class=\"redirect\" routerLink=\"/sign-in\"> Sign in</span></span>\n      </div>\n  \n    </div>\n  </div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n// Import all the components for which navigation service has to be activated\nimport { SignInComponent } from '../modules/auth/sign-in/sign-in.component';\nimport { SignUpComponent } from '../modules/auth/sign-up/sign-up.component';\nimport { DashboardComponent } from '../modules/auth/dashboard/dashboard.component';\nimport { ForgotPasswordComponent } from '../modules/auth/forgot-password/forgot-password.component';\nimport { AuthGuard } from '../core/guards/auth.guard';\nimport { VerifyEmailComponent } from '../modules/auth/verify-email/verify-email.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/sign-in', pathMatch: 'full' },\n  { path: 'sign-in', component: SignInComponent },\n  { path: 'register-user', component: SignUpComponent },\n  { path: 'dashboard', component: DashboardComponent },\n  // , canActivate: [AuthGuard]},\n  { path: 'forgot-password', component: ForgotPasswordComponent },\n  { path: 'verify-email-address', component: VerifyEmailComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyAS7a4VOCLwKRbivvYG2nKKLpQewP42_ZE',\n    authDomain: 'test-lib-37174.firebaseapp.com',\n    databaseURL: 'https://test-lib-37174.firebaseio.com',\n    projectId: 'test-lib-37174',\n    storageBucket: 'test-lib-37174.appspot.com',\n    messagingSenderId: '1046319670473',\n    appId: '1:1046319670473:web:557a5c2aaff42237335918',\n    measurementId: 'G-L48VK03HY6'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}