{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/services/auth.service.ts","webpack:///src/app/modules/auth/auth.module.ts","webpack:///src/app/modules/auth/dashboard/dashboard.component.ts","webpack:///src/app/modules/auth/dashboard/dashboard.component.html","webpack:///src/app/modules/auth/forgot-password/forgot-password.component.ts","webpack:///src/app/modules/auth/forgot-password/forgot-password.component.html","webpack:///src/app/modules/auth/sign-in/sign-in.component.ts","webpack:///src/app/modules/auth/sign-in/sign-in.component.html","webpack:///src/app/modules/auth/sign-up/sign-up.component.ts","webpack:///src/app/modules/auth/sign-up/sign-up.component.html","webpack:///src/app/modules/auth/verify-email/verify-email.component.ts","webpack:///src/app/modules/auth/verify-email/verify-email.component.html","webpack:///src/app/routing/app-routing.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebase","declarations","imports","providers","bootstrap","AuthService","afs","afAuth","router","ngZone","authState","subscribe","user","userData","localStorage","setItem","JSON","stringify","parse","getItem","email","password","signInWithEmailAndPassword","result","run","navigate","nav","console","log","SetUserData","error","window","alert","message","createUserWithEmailAndPassword","SendVerificationMail","currentUser","sendEmailVerification","passwordResetEmail","sendPasswordResetEmail","AuthLogin","GoogleAuthProvider","FacebookAuthProvider","GithubAuthProvider","provider","signInWithPopup","userRef","doc","uid","displayName","photoURL","emailVerified","set","merge","signOut","removeItem","providedIn","AuthModule","DashboardComponent","authService","ForgotPasswordComponent","SignInComponent","SignUpComponent","VerifyEmailComponent","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'test-lib';\n}\n","\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './routing/app-routing.module';\nimport { AppComponent } from './app.component';\n\n// Firebase services + enviorment module\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { environment } from '../environments/environment';\n\nimport { AuthModule } from './modules/auth/auth.module';\nimport { AuthService } from './core/services/auth.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AuthModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n  ],\n  providers: [AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable, NgZone } from '@angular/core';\nimport { User } from '../../models/user';\nimport { auth } from 'firebase/app';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  userData: any; // Save logged in user data\n\n  constructor(\n    public afs: AngularFirestore,   // Inject Firestore service\n    public afAuth: AngularFireAuth, // Inject Firebase auth service\n    public router: Router,\n    public ngZone: NgZone // NgZone service to remove outside scope warning\n  ) {\n    /* Saving user data in localstorage when\n    logged in and setting up null when logged out */\n    this.afAuth.authState.subscribe(user => {\n      if (user) {\n        this.userData = user;\n        localStorage.setItem('user', JSON.stringify(this.userData));\n        JSON.parse(localStorage.getItem('user'));\n      } else {\n        localStorage.setItem('user', null);\n        JSON.parse(localStorage.getItem('user'));\n      }\n    });\n  }\n\n  // Sign in with email/password\n  SignIn(email, password) {\n    return this.afAuth.signInWithEmailAndPassword(email, password)\n      .then((result) => {\n        this.ngZone.run(() => {\n          this.router.navigate(['/', 'dashboard']).then(nav => {\n            console.log(nav);\n          });\n        });\n        this.SetUserData(result.user);\n      }).catch((error) => {\n        window.alert(error.message);\n      });\n  }\n\n  // Sign up with email/password\n  SignUp(email, password) {\n    return this.afAuth.createUserWithEmailAndPassword(email, password)\n      .then((result) => {\n        /* Call the SendVerificaitonMail() function when new user sign\n        up and returns promise */\n        this.SendVerificationMail();\n        this.SetUserData(result.user);\n      }).catch((error) => {\n        window.alert(error.message);\n      });\n  }\n\n\n  // Send email verfificaiton when new user sign up\n  SendVerificationMail() {\n    return this.afAuth.currentUser.then((user) => {\n      return user.sendEmailVerification();\n    })\n    .then(() => {\n      this.router.navigate(['verify-email-address']);\n    });\n  }\n\n  // Reset Forggot password\n  ForgotPassword(passwordResetEmail) {\n    return this.afAuth.sendPasswordResetEmail(passwordResetEmail)\n    .then(() => {\n      window.alert('Password reset email sent, check your inbox.');\n    }).catch((error) => {\n      window.alert(error);\n    });\n  }\n\n  // Returns true when user is looged in and email is verified\n  get isLoggedIn(): boolean {\n    const user = JSON.parse(localStorage.getItem('user'));\n    return (user !== null && user.emailVerified !== false) ? true : false;\n  }\n\n  // Sign in with Google\n  GoogleAuth() {\n    return this.AuthLogin(new auth.GoogleAuthProvider());\n  }\n\n  // Sign in with Facebook\n  FacebookAuth() {\n    return this.AuthLogin(new auth.FacebookAuthProvider());\n  }\n  // Sign in with Facebook\n  GitHubAuth() {\n    return this.AuthLogin(new auth.GithubAuthProvider());\n  }\n  // Auth logic to run auth providers\n  AuthLogin(provider) {\n    return this.afAuth.signInWithPopup(provider)\n    .then((result) => {\n       // this.ngZone.run(() => {\n          this.router.navigate(['dashboard']);\n        // });\n          this.SetUserData(result.user);\n    }).catch((error) => {\n      window.alert(error);\n    });\n  }\n\n  /* Setting up user data when sign in with username/password,\n  sign up with username/password and sign in with social auth\n  provider in Firestore database using AngularFirestore + AngularFirestoreDocument service */\n  SetUserData(user) {\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(`users/${user.uid}`);\n    const userData: User = {\n      uid: user.uid,\n      email: user.email,\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      emailVerified: user.emailVerified\n    };\n    return userRef.set(userData, {\n      merge: true\n    });\n  }\n\n  // Sign out\n  SignOut() {\n    return this.afAuth.signOut().then(() => {\n      localStorage.removeItem('user');\n      this.router.navigate(['sign-in']);\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { SignInComponent } from './sign-in/sign-in.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { VerifyEmailComponent } from './verify-email/verify-email.component';\nimport { RouterModule } from '@angular/router';\n\n\n@NgModule({\n  declarations: [DashboardComponent, SignInComponent, SignUpComponent, ForgotPasswordComponent, VerifyEmailComponent],\n  imports: [\n    CommonModule, RouterModule\n  ],\n  exports: [RouterModule]\n})\nexport class AuthModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../core/services/auth.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Top navigation -->\n<nav class=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n    <a class=\"navbar-brand col-sm-3 col-md-2 mr-0\">\n      <img class=\"brand-logo\" src=\"assets/logo-positronx-white.svg\" alt=\"positronX.io Logo\">\n    </a>\n  </nav>\n  \n  <!-- Sidebar navigation -->\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n  \n      <nav class=\"col-md-2 d-md-block bg-light sidebar\">\n        <div class=\"sidebar-sticky\">\n          <ul class=\"nav flex-column\">\n            <li class=\"nav-item\">\n              <a class=\"nav-link active\">\n                <i class=\"fas fa-user\"></i>User Profile\n              </a>\n            </li>\n            <!-- Calling SignOut() Api from AuthService -->\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" (click)=\"authService.SignOut()\">\n                <i class=\"fas fa-sign-out-alt\"></i>Log out\n              </a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n  \n      <!-- Main content -->\n      <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\n        <div class=\"inner-adjust\">\n  \n          <div class=\"pt-3 pb-2 mb-3 border-bottom\">\n            <h1 class=\"h2\">User Profile</h1>\n          </div>\n          <!-- Show user data when logged in -->\n          <div class=\"row\" *ngIf=\"authService.userData as user\">\n            <div class=\"col-md-12\">\n              <div class=\"media\">\n                <img class=\"align-self-start mr-5 img-thumbnail rounded-circle\" src=\"{{(user.photoURL) ? user.photoURL : '/assets/dummy-user.png'}}\"\n                  alt=\"{{user.displayName}}\">\n                <div class=\"media-body\">\n                  <h1>Hello: <strong>{{(user.displayName) ? user.displayName : 'User'}}</strong></h1>\n                  <p>User ID: <strong>{{user.uid}}</strong></p>\n                  <p>Email: <strong>{{user.email}}</strong></p>\n                  <p>Email Verified: <strong>{{user.emailVerified}}</strong></p>\n                </div>\n              </div>\n            </div>\n          </div>\n  \n        </div>\n      </main>\n  \n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../core/services/auth.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"displayTable\">\n    <div class=\"displayTableCell\">\n      <div class=\"authBlock\">\n        <h3>Reset Password</h3>\n  \n        <p class=\"text-center\">Please enter your email address to request a password reset.</p>\n  \n        <div class=\"formGroup\">\n          <input type=\"email\" class=\"formControl\" placeholder=\"Email Address\" #passwordResetEmail required>\n        </div>\n  \n        <!-- Calling ForgotPassword from AuthService Api -->\n        <div class=\"formGroup\">\n          <input type=\"submit\" class=\"btn btnPrimary\" value=\"Reset Password\" (click)=\"authService.ForgotPassword(passwordResetEmail.value)\">\n        </div>\n      </div>\n  \n      <div class=\"redirectToLogin\">\n        <span>Go back to ? <span class=\"redirect\" routerLink=\"/sign-in\">Log In</span></span>\n      </div>\n  \n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../core/services/auth.service';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.scss']\n})\nexport class SignInComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"displayTable\">\n    <div class=\"displayTableCell\">\n  \n      <div class=\"authBlock\">\n        <h3>Sign In</h3>\n        <div class=\"formGroup\">\n          <input type=\"text\" class=\"formControl\" placeholder=\"Username\" #userName required>\n        </div>\n  \n        <div class=\"formGroup\">\n          <input type=\"password\" class=\"formControl\" placeholder=\"Password\" #userPassword required>\n        </div>\n  \n        <!-- Calling SignIn Api from AuthService -->\n        <div class=\"formGroup\">\n          <input type=\"button\" class=\"btn btnPrimary\" value=\"Log in\" (click)=\"authService.SignIn(userName.value, userPassword.value)\">\n        </div>\n  \n        <div class=\"formGroup\">\n          <span class=\"or\"><span class=\"orInner\">Or</span></span>\n        </div>\n  \n        <!-- Calling GoogleAuth Api from AuthService -->\n        <div class=\"formGroup\">\n          <button type=\"button\" class=\"btn googleBtn\" (click)=\"authService.GoogleAuth()\">\n            <i class=\"fab fa-google-plus-g\"></i>\n            Log in with Google\n          </button>\n        </div>\n      \n        <!-- Continue with Facebook -->\n        <div class=\"formGroup\">\n          <button type=\"button\" class=\"btn facebookBtn\" (click)=\"authService.FacebookAuth()\">\n            <i class=\"fab fa-facebook\"></i>\n            Log in with Facebook\n          </button>\n        </div>\n\n        <div class=\"forgotPassword\">\n          <span routerLink=\"/forgot-password\">Forgot Password?</span>\n        </div>\n      </div>\n  \n      <div class=\"redirectToLogin\">\n        <span>Don't have an account?<span class=\"redirect\" routerLink=\"/register-user\">Sign Up</span></span>\n      </div>\n  \n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../core/services/auth.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"displayTable\">\n    <div class=\"displayTableCell\">\n  \n      <div class=\"authBlock\">\n        <h3>Sign Up</h3>\n  \n        <div class=\"formGroup\">\n          <input type=\"email\" class=\"formControl\" placeholder=\"Email Address\" #userEmail required>\n        </div>\n  \n        <div class=\"formGroup\">\n          <input type=\"password\" class=\"formControl\" placeholder=\"Password\" #userPwd required>\n        </div>\n  \n        <div class=\"formGroup\">\n          <input type=\"button\" class=\"btn btnPrimary\" value=\"Sign Up\" (click)=\"authService.SignUp(userEmail.value, userPwd.value)\">\n        </div>\n  \n        <div class=\"formGroup\">\n          <span class=\"or\"><span class=\"orInner\">Or</span></span>\n        </div>\n  \n        <!-- Continue with Google -->\n        <div class=\"formGroup\">\n          <button type=\"button\" class=\"btn googleBtn\" (click)=\"authService.GoogleAuth()\">\n            <i class=\"fab fa-google-plus-g\"></i>\n            Continue with Google\n          </button>\n        </div>\n  \n        <!-- Continue with Facebook -->\n        <div class=\"formGroup\">\n          <button type=\"button\" class=\"btn facebookBtn\" (click)=\"authService.FacebookAuth()\">\n            <i class=\"fab fa-facebook\"></i>\n            Continue with Facebook\n          </button>\n        </div>\n         <!-- Continue with GitHub -->\n         <div class=\"formGroup\">\n          <button type=\"button\" class=\"btn githubBth\" (click)=\"authService.GitHubAuth()\">\n            <i class=\"fab fa-github\"></i>\n            Continue with GitHub\n          </button>\n        </div>\n      </div>\n  \n      <div class=\"redirectToLogin\">\n        <span>Already have an account? <span class=\"redirect\" routerLink=\"/sign-in\">Log In</span></span>\n      </div>\n    </div>\n  \n  </div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../core/services/auth.service';\n\n@Component({\n  selector: 'app-verify-email',\n  templateUrl: './verify-email.component.html',\n  styleUrls: ['./verify-email.component.scss']\n})\nexport class VerifyEmailComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"displayTable\">\n    <div class=\"displayTableCell\">\n  \n      <div class=\"authBlock\">\n        <h3>Thank You for Registering</h3>\n  \n        <div class=\"formGroup\" *ngIf=\"authService.userData as user\">\n          <p class=\"text-center\">We have sent a confirmation email to <strong>{{user.email}}</strong>.</p>\n          <p class=\"text-center\">Please check your email and click on the link to verfiy your email address.</p>\n        </div>\n        \n        <!-- Calling SendVerificationMail() method using authService Api -->\n        <div class=\"formGroup\">\n          <button type=\"button\" class=\"btn btnPrimary\" (click)=\"authService.SendVerificationMail()\">\n            <i class=\"fas fa-redo-alt\"></i>\n            Resend Verification Email\n          </button>\n        </div>\n  \n      </div>\n  \n      <div class=\"redirectToLogin\">\n        <span>Go back to?<span class=\"redirect\" routerLink=\"/sign-in\"> Sign in</span></span>\n      </div>\n  \n    </div>\n  </div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n// Import all the components for which navigation service has to be activated\nimport { SignInComponent } from '../modules/auth/sign-in/sign-in.component';\nimport { SignUpComponent } from '../modules/auth/sign-up/sign-up.component';\nimport { DashboardComponent } from '../modules/auth/dashboard/dashboard.component';\nimport { ForgotPasswordComponent } from '../modules/auth/forgot-password/forgot-password.component';\nimport { AuthGuard } from '../core/guards/auth.guard';\nimport { VerifyEmailComponent } from '../modules/auth/verify-email/verify-email.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/sign-in', pathMatch: 'full' },\n  { path: 'sign-in', component: SignInComponent },\n  { path: 'register-user', component: SignUpComponent },\n  { path: 'dashboard', component: DashboardComponent },\n  // , canActivate: [AuthGuard]},\n  { path: 'forgot-password', component: ForgotPasswordComponent },\n  { path: 'verify-email-address', component: VerifyEmailComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyAS7a4VOCLwKRbivvYG2nKKLpQewP42_ZE',\n    authDomain: 'test-lib-37174.firebaseapp.com',\n    databaseURL: 'https://test-lib-37174.firebaseio.com',\n    projectId: 'test-lib-37174',\n    storageBucket: 'test-lib-37174.appspot.com',\n    messagingSenderId: '1046319670473',\n    appId: '1:1046319670473:web:557a5c2aaff42237335918',\n    measurementId: 'G-L48VK03HY6'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}